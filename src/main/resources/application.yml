# 设置端口
server:
  port: 8080

# 设置数据源
spring:
  datasource:
    # 驱动
    # 数据库连接已过时，com.mysql.jdbc.Driver被建议替换为com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://114.115.184.18:3306/community?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8
    # 注意修改数据库连接信息
    username: root
    password: root
    platform: mysql
    # 下面为连接池的补充设置，应用到上面所有数据源中
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大
    druid:
      initialSize: 1
      minIdle: 3
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB

# 配置 MyBatis
mybatis:
  # classpath 在这里代表 src 目录
  mapper-locations: classpath:mappers/*.xml
  # 全局的映射，不用在xml文件写实体类的全路径
  type-aliases-package: edu.dlut.thesismanage.pojo
  configuration:
    # 开启驼峰映射
    map-underscore-to-camel-case: true

uploadFile:
  resourceHandler: /uploadFiles/**
  location: F:/workspace/UploadFiles/


Github.client.id: b58a058c47af742ed8b6
Github.client.secret: d3779ab65e5c056d149391a5cf1f2b69dec87104
Github.client.uri: http://localhost:8080/callback
